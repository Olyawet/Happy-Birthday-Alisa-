// –î–∞–Ω–Ω—ã–µ –∫–≤–µ—Å—Ç–∞
const questData = {
    questions: [
        {
            id: 1,
            question: "–ì–¥–µ –º—ã –ø–æ–∑–Ω–∞–∫–æ–º–∏–ª–∏—Å—å?",
            options: ["–®–∫–æ–ª–∞", "–õ–∞–≥–µ—Ä—å", "–î–≤–æ—Ä", "–í –∏–Ω—Ç–µ—Ä–Ω–µ—Ç–µ"],
            correct: 2
        },
        {
            id: 2,
            question: "–ö–∞–∫–æ–π –º–æ–π —Å–∞–º—ã–π —Å–º–µ—à–Ω–æ–π –ø—Ä–æ–≤–∞–ª –Ω–∞ —Ç–≤–æ–∏—Ö –≥–ª–∞–∑–∞—Ö?",
            options: ["–£–ø–∞–ª(–∞) —Å –≤–µ–ª–æ—Å–∏–ø–µ–¥–∞", "–ü–µ—Ä–µ—Å–æ–ª–∏–ª(–∞) —Ç–æ—Ä—Ç", "–ó–∞–±—ã–ª(–∞) —Å–ª–æ–≤–∞ –ø–µ—Å–Ω–∏ –Ω–∞ –∫–æ–Ω—Ü–µ—Ä—Ç–µ", "–í—Å–µ –≤—ã—à–µ–ø–µ—Ä–µ—á–∏—Å–ª–µ–Ω–Ω–æ–µ üòÖ"],
            correct: 3
        },
        {
            id: 3,
            question: "–ß—Ç–æ —Ç—ã –±–æ–ª—å—à–µ –≤—Å–µ–≥–æ –ª—é–±–∏—à—å –µ—Å—Ç—å?",
            options: ["–ü–∏—Ü—Ü–∞", "–°—É—à–∏", "–¢–æ—Ä—Ç", "–í—Å–µ —Å–ª–∞–¥–∫–æ–µ"],
            correct: 3
        },
        {
            id: 4,
            question: "–ö–∞–∫–æ–π –ø–æ–¥–∞—Ä–æ–∫ —Ç—ã –ù–ï —Ö–æ—á–µ—à—å –ø–æ–ª—É—á–∏—Ç—å? üòâ",
            options: ["–ù–æ—Å–∫–∏", "–®–∞–º–ø—É–Ω—å", "–£—á–µ–±–Ω–∏–∫", "–í—Å–µ —ç—Ç–∏ –≤–∞—Ä–∏–∞–Ω—Ç—ã"],
            correct: 3
        },
        {
            id: 5,
            question: "–°–∫–æ–ª—å–∫–æ —Ä–∞–∑ –∑–∞ —ç—Ç–æ—Ç –≥–æ–¥ —è –≥–æ–≤–æ—Ä–∏–ª(–∞) —Ç–µ–±–µ '–°–ø–∞—Å–∏–±–æ'?",
            options: ["10", "16", "25", "–°–ª–∏—à–∫–æ–º –º–Ω–æ–≥–æ, —á—Ç–æ–±—ã —Å–æ—Å—á–∏—Ç–∞—Ç—å"],
            correct: 1
        }
    ]
};

// –°–æ—Å—Ç–æ—è–Ω–∏–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
let currentQuestion = 0;
let selectedAnswer = null;
let answers = [];

// –≠–ª–µ–º–µ–Ω—Ç—ã DOM
const welcomeScreen = document.getElementById('welcome-screen');
const questScreen = document.getElementById('quest-screen');
const finalScreen = document.getElementById('final-screen');
const startQuestBtn = document.getElementById('start-quest');
const questionContainer = document.getElementById('question-container');
const currentQuestionSpan = document.getElementById('current-question');
const answerBtn = document.getElementById('answer-btn');
const nextBtn = document.getElementById('next-btn');

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è
document.addEventListener('DOMContentLoaded', function() {
    startQuestBtn.addEventListener('click', startQuest);
    answerBtn.addEventListener('click', checkAnswer);
    nextBtn.addEventListener('click', nextQuestion);
    
    // –ó–∞–ø—É—Å–∫ –∞–Ω–∏–º–∞—Ü–∏–∏ –ø–∞–¥–∞—é—â–∏—Ö —Å–µ—Ä–¥–µ—á–µ–∫
    createFallingHearts();
    
    // –ó–∞—â–∏—Ç–∞ –æ—Ç –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è
    preventCopying();
});

// –ó–∞–ø—É—Å–∫ –∫–≤–µ—Å—Ç–∞
function startQuest() {
    welcomeScreen.classList.remove('active');
    questScreen.classList.add('active');
    showQuestion();
}

// –ü–æ–∫–∞–∑–∞—Ç—å —Ç–µ–∫—É—â–∏–π –≤–æ–ø—Ä–æ—Å
function showQuestion() {
    const question = questData.questions[currentQuestion];
    currentQuestionSpan.textContent = currentQuestion + 1;
    
    questionContainer.innerHTML = `
        <div class="question">${question.question}</div>
        <div class="options">
            ${question.options.map((option, index) => `
                <div class="option" data-index="${index}">
                    ${String.fromCharCode(65 + index)}) ${option}
                </div>
            `).join('')}
        </div>
    `;
    
    // –î–æ–±–∞–≤–∏—Ç—å –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤ –æ—Ç–≤–µ—Ç–æ–≤
    const options = questionContainer.querySelectorAll('.option');
    options.forEach(option => {
        option.addEventListener('click', () => selectOption(option));
    });
    
    // –°–±—Ä–æ—Å–∏—Ç—å —Å–æ—Å—Ç–æ—è–Ω–∏–µ
    selectedAnswer = null;
    answerBtn.disabled = true;
    answerBtn.style.opacity = '0.5';
}

// –í—ã–±–æ—Ä –≤–∞—Ä–∏–∞–Ω—Ç–∞ –æ—Ç–≤–µ—Ç–∞
function selectOption(optionElement) {
    // –£–±—Ä–∞—Ç—å –≤—ã–¥–µ–ª–µ–Ω–∏–µ —Å–æ –≤—Å–µ—Ö –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤
    questionContainer.querySelectorAll('.option').forEach(opt => {
        opt.classList.remove('selected');
    });
    
    // –í—ã–¥–µ–ª–∏—Ç—å –≤—ã–±—Ä–∞–Ω–Ω—ã–π –≤–∞—Ä–∏–∞–Ω—Ç
    optionElement.classList.add('selected');
    selectedAnswer = parseInt(optionElement.dataset.index);
    
    // –ê–∫—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å –∫–Ω–æ–ø–∫—É "–û—Ç–≤–µ—Ç–∏—Ç—å"
    answerBtn.disabled = false;
    answerBtn.style.opacity = '1';
}

// –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –æ—Ç–≤–µ—Ç
function checkAnswer() {
    if (selectedAnswer === null) return;
    
    const question = questData.questions[currentQuestion];
    const options = questionContainer.querySelectorAll('.option');
    
    // –ü–æ–∫–∞–∑–∞—Ç—å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç
    options[question.correct].classList.add('correct');
    
    if (selectedAnswer !== question.correct) {
        options[selectedAnswer].classList.add('incorrect');
    }
    
    // –°–æ—Ö—Ä–∞–Ω–∏—Ç—å –æ—Ç–≤–µ—Ç
    answers.push({
        questionId: question.id,
        selected: selectedAnswer,
        correct: selectedAnswer === question.correct
    });
    
    // –ü–æ–∫–∞–∑–∞—Ç—å –∫–Ω–æ–ø–∫—É "–î–∞–ª—å—à–µ"
    answerBtn.style.display = 'none';
    nextBtn.style.display = 'inline-block';
    
    // –û—Ç–∫–ª—é—á–∏—Ç—å –≤—ã–±–æ—Ä –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤
    options.forEach(option => {
        option.style.pointerEvents = 'none';
    });
}

// –°–ª–µ–¥—É—é—â–∏–π –≤–æ–ø—Ä–æ—Å
function nextQuestion() {
    currentQuestion++;
    
    if (currentQuestion < questData.questions.length) {
        // –ü–æ–∫–∞–∑–∞—Ç—å —Å–ª–µ–¥—É—é—â–∏–π –≤–æ–ø—Ä–æ—Å
        answerBtn.style.display = 'inline-block';
        nextBtn.style.display = 'none';
        showQuestion();
    } else {
        // –ü–æ–∫–∞–∑–∞—Ç—å —Ñ–∏–Ω–∞–ª—å–Ω—ã–π —ç–∫—Ä–∞–Ω
        showFinalScreen();
    }
}

// –ü–æ–∫–∞–∑–∞—Ç—å —Ñ–∏–Ω–∞–ª—å–Ω—ã–π —ç–∫—Ä–∞–Ω
function showFinalScreen() {
    questScreen.classList.remove('active');
    finalScreen.classList.add('active');
    
    // –ó–∞–ø—É—Å—Ç–∏—Ç—å –∞–Ω–∏–º–∞—Ü–∏—é –ø–∞–¥–∞—é—â–∏—Ö —Å–µ—Ä–¥–µ—á–µ–∫ –Ω–∞ —Ñ–∏–Ω–∞–ª—å–Ω–æ–º —ç–∫—Ä–∞–Ω–µ
    createFallingHearts();
    
    // –ù–∞—Å—Ç—Ä–æ–∏—Ç—å –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏–µ —Ç—Ä–µ–∫–∞ –ø–æ—Å–ª–µ –ø–æ–∫–∞–∑–∞ —Ñ–∏–Ω–∞–ª—å–Ω–æ–≥–æ —ç–∫—Ä–∞–Ω–∞
    setTimeout(() => {
        setupMusicTrack();
    }, 100);
    
    // –ü–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
    const correctAnswers = answers.filter(answer => answer.correct).length;
    console.log(`–ü—Ä–∞–≤–∏–ª—å–Ω—ã—Ö –æ—Ç–≤–µ—Ç–æ–≤: ${correctAnswers} –∏–∑ ${questData.questions.length}`);
}

// –°–æ–∑–¥–∞–Ω–∏–µ –ø–∞–¥–∞—é—â–∏—Ö —Å–µ—Ä–¥–µ—á–µ–∫
function createFallingHearts() {
    const hearts = ['‚ù§Ô∏è', 'üíñ', 'üíï', 'üíó', 'üíì'];
    
    setInterval(() => {
        const heart = document.createElement('div');
        heart.className = 'heart';
        heart.textContent = hearts[Math.floor(Math.random() * hearts.length)];
        heart.style.left = Math.random() * 100 + 'vw';
        heart.style.animationDuration = (Math.random() * 3 + 3) + 's';
        
        document.body.appendChild(heart);
        
        // –£–¥–∞–ª–∏—Ç—å —Å–µ—Ä–¥–µ—á–∫–æ –ø–æ—Å–ª–µ –∞–Ω–∏–º–∞—Ü–∏–∏
        setTimeout(() => {
            if (heart.parentNode) {
                heart.parentNode.removeChild(heart);
            }
        }, 6000);
    }, 500);
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Ç–∞–π–º–µ—Ä–∞ (–µ—Å–ª–∏ –Ω—É–∂–Ω–æ)
function updateTimer() {
    // –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –ª–æ–≥–∏–∫—É –¥–ª—è —Ä–µ–∞–ª—å–Ω–æ–≥–æ —Ç–∞–π–º–µ—Ä–∞
    // –ù–∞–ø—Ä–∏–º–µ—Ä, –æ—Ç—Å—á–µ—Ç –¥–æ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω–æ–π –¥–∞—Ç—ã
    const targetDate = new Date('2025-07-22'); // –ü—Ä–∏–º–µ—Ä –¥–∞—Ç—ã
    const now = new Date();
    const diffTime = targetDate - now;
    const diffDays = Math.ceil(diffTime / (1000 * 60 * 60 * 24));
    
    const countdownNumber = document.querySelector('.countdown-number');
    if (countdownNumber) {
        countdownNumber.textContent = Math.max(0, diffDays);
    }
}

// –û–±–Ω–æ–≤–ª—è—Ç—å —Ç–∞–π–º–µ—Ä –∫–∞–∂–¥—ã–π –¥–µ–Ω—å
setInterval(updateTimer, 24 * 60 * 60 * 1000);
updateTimer(); // –ü–µ—Ä–≤–æ–Ω–∞—á–∞–ª—å–Ω–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞—â–∏—Ç—ã –æ—Ç –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è
function preventCopying() {
    // –ó–∞–ø—Ä–µ—Ç –∫–æ–Ω—Ç–µ–∫—Å—Ç–Ω–æ–≥–æ –º–µ–Ω—é
    document.addEventListener('contextmenu', function(e) {
        e.preventDefault();
        return false;
    });
    
    // –ó–∞–ø—Ä–µ—Ç –≤—ã–¥–µ–ª–µ–Ω–∏—è —Ç–µ–∫—Å—Ç–∞
    document.addEventListener('selectstart', function(e) {
        e.preventDefault();
        return false;
    });
    
    // –ó–∞–ø—Ä–µ—Ç –ø–µ—Ä–µ—Ç–∞—Å–∫–∏–≤–∞–Ω–∏—è —ç–ª–µ–º–µ–Ω—Ç–æ–≤
    document.addEventListener('dragstart', function(e) {
        e.preventDefault();
        return false;
    });
    
    // –ó–∞–ø—Ä–µ—Ç –∫–ª–∞–≤–∏—à –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è
    document.addEventListener('keydown', function(e) {
        if (e.ctrlKey && (e.key === 'c' || e.key === 'C' || e.key === 'u' || e.key === 'U' || e.key === 's' || e.key === 'S')) {
            e.preventDefault();
            return false;
        }
        
        // –ó–∞–ø—Ä–µ—Ç F12
        if (e.key === 'F12') {
            e.preventDefault();
            return false;
        }
    });
    
    // –ó–∞–ø—Ä–µ—Ç –∏–Ω—Å–ø–µ–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —ç–ª–µ–º–µ–Ω—Ç–æ–≤
    document.addEventListener('keyup', function(e) {
        if (e.key === 'F12') {
            e.preventDefault();
            return false;
        }
    });
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏—è —Ç—Ä–µ–∫–∞
function setupMusicTrack() {
    const musicTrackLink = document.querySelector('.music-track');
    const audioElement = document.getElementById('birthday-track');
    
    console.log('–ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Ç—Ä–µ–∫–∞:', { musicTrackLink, audioElement });
    
    if (!musicTrackLink) {
        console.error('–ö–Ω–æ–ø–∫–∞ –º—É–∑—ã–∫–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞!');
        return;
    }
    
    if (!audioElement) {
        console.error('–ê—É–¥–∏–æ —ç–ª–µ–º–µ–Ω—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω!');
        return;
    }
    
    if (musicTrackLink && audioElement) {
        musicTrackLink.addEventListener('click', function(e) {
            e.preventDefault();
            
            // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∏–≥—Ä–∞–µ—Ç –ª–∏ —É–∂–µ –º—É–∑—ã–∫–∞
            if (audioElement.paused) {
                // –ù–∞—á–∏–Ω–∞–µ–º –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏–µ —Å –Ω–∞—á–∞–ª–∞
                audioElement.currentTime = 0;
                audioElement.play().then(() => {
                    // –ò–∑–º–µ–Ω—è–µ–º —Ç–µ–∫—Å—Ç —Å—Å—ã–ª–∫–∏
                    musicTrackLink.textContent = '‚è∏Ô∏è –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Ç—Ä–µ–∫';
                    musicTrackLink.classList.add('playing');
                }).catch(error => {
                    console.log('–û—à–∏–±–∫–∞ –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏—è:', error);
                    alert('–ù–µ —É–¥–∞–ª–æ—Å—å –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ—Å—Ç–∏ —Ç—Ä–µ–∫. –ü–æ–ø—Ä–æ–±—É–π –µ—â–µ —Ä–∞–∑!');
                });
            } else {
                // –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏–µ
                audioElement.pause();
                musicTrackLink.textContent = 'üéÇ –ü—Ä–æ—Å–ª—É—à–∞—Ç—å —Ç—Ä–µ–∫ "–° –¥–Ω—ë–º —Ä–æ–∂–¥–µ–Ω–∏—è, –ê–ª–∏—Å–∞!"';
                musicTrackLink.classList.remove('playing');
            }
        });
        
        // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ–∫–æ–Ω—á–∞–Ω–∏—è —Ç—Ä–µ–∫–∞
        audioElement.addEventListener('ended', function() {
            musicTrackLink.textContent = 'üéÇ –ü—Ä–æ—Å–ª—É—à–∞—Ç—å —Ç—Ä–µ–∫ "–° –¥–Ω—ë–º —Ä–æ–∂–¥–µ–Ω–∏—è, –ê–ª–∏—Å–∞!"';
            musicTrackLink.classList.remove('playing');
        });
    }
}

// –ì–ª–æ–±–∞–ª—å–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏—è –º—É–∑—ã–∫–∏
function playMusic(event) {
    event.preventDefault();
    
    const musicTrackLink = event.target;
    const audioElement = document.getElementById('birthday-track');
    
    console.log('–í–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏–µ –º—É–∑—ã–∫–∏:', { musicTrackLink, audioElement });
    
    if (!audioElement) {
        console.error('–ê—É–¥–∏–æ —ç–ª–µ–º–µ–Ω—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω!');
        alert('–û—à–∏–±–∫–∞: –∞—É–¥–∏–æ —ç–ª–µ–º–µ–Ω—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω');
        return;
    }
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∏–≥—Ä–∞–µ—Ç –ª–∏ —É–∂–µ –º—É–∑—ã–∫–∞
    if (audioElement.paused) {
        // –ù–∞—á–∏–Ω–∞–µ–º –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏–µ —Å –Ω–∞—á–∞–ª–∞
        audioElement.currentTime = 0;
        audioElement.play().then(() => {
            // –ò–∑–º–µ–Ω—è–µ–º —Ç–µ–∫—Å—Ç —Å—Å—ã–ª–∫–∏
            musicTrackLink.textContent = '‚è∏Ô∏è –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Ç—Ä–µ–∫';
            musicTrackLink.classList.add('playing');
            console.log('–ú—É–∑—ã–∫–∞ –Ω–∞—á–∞–ª–∞ –∏–≥—Ä–∞—Ç—å');
        }).catch(error => {
            console.log('–û—à–∏–±–∫–∞ –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏—è:', error);
            alert('–ù–µ —É–¥–∞–ª–æ—Å—å –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ—Å—Ç–∏ —Ç—Ä–µ–∫. –ü–æ–ø—Ä–æ–±—É–π –µ—â–µ —Ä–∞–∑!');
        });
    } else {
        // –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏–µ
        audioElement.pause();
        musicTrackLink.textContent = 'üéÇ –ü—Ä–æ—Å–ª—É—à–∞—Ç—å —Ç—Ä–µ–∫ "–° –¥–Ω—ë–º —Ä–æ–∂–¥–µ–Ω–∏—è, –ê–ª–∏—Å–∞!"';
        musicTrackLink.classList.remove('playing');
        console.log('–ú—É–∑—ã–∫–∞ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞');
    }
}
