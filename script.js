// –î–∞–Ω–Ω—ã–µ –∫–≤–µ—Å—Ç–∞
const questData = {
    questions: [
        {
            id: 1,
            question: "–ì–¥–µ –º—ã –ø–æ–∑–Ω–∞–∫–æ–º–∏–ª–∏—Å—å?",
            options: ["–®–∫–æ–ª–∞", "–õ–∞–≥–µ—Ä—å", "–î–≤–æ—Ä", "–í –∏–Ω—Ç–µ—Ä–Ω–µ—Ç–µ"],
            correct: 2
        },
        {
            id: 2,
            question: "–°–∫–æ–ª—å–∫–æ —á–∞—Å–æ–≤ –¥–ª–∏–ª–∞—Å—å –Ω–∞—à–∞ —Å–∞–º–∞—è –¥–æ–ª–≥–∞—è –ø—Ä–æ–≥—É–ª–∫–∞? (–í—Å–ø–æ–º–∏–Ω–∞–π –Ω–∞—à–∏ –∫—Ä—É–≥–∏)",
            options: ["4 —á–∞—Å–∞", "15 —á–∞—Å–æ–≤", "9 —á–∞—Å–æ–≤", "1 —á–∞—Å"],
            correct: 2
        },
        {
            id: 3,
            question: "–ù–∞ –∫–∞–∫–æ–µ —Å–∞–º–æ–µ –¥–∞–ª—å–Ω–µ–µ —Ä–∞—Å—Å—Ç–æ—è–Ω–∏–µ –º—ã –¥–æ—Ö–æ–¥–∏–ª–∏? (–ü–µ—à–∫–æ–º –æ—Ç –º–æ–µ–≥–æ –¥–æ–º–∞)",
            options: ["–ü–µ—Ä–µ–∫—Ä—ë—Å—Ç–æ–∫", '–°—Ç. –º–µ—Ç—Ä–æ "–ú–µ–∂–¥—É–Ω–∞—Ä–æ–¥–Ω–∞—è"', "–°—Ç. –º–µ—Ç—Ä–æ –ö—É–ø—á–∏–Ω–æ", "–î–æ –û–ª–∏–≤–∫–∏"],
            correct: 2
        },
        {
            id: 4,
            question: "–í –∫–∞–∫–æ–µ –≤—Ä–µ–º—è –≥–æ–¥–∞ –º—ã –¥–æ–ª–≥–æ –∂–¥–∞–ª–∏ –∞–≤—Ç–æ–±—É—Å? (–ö–æ–≥–¥–∞ —è —Ç–µ–±—è –ø—Ä–æ–≤–æ–∂–∞–ª–∞). –í –∫–∞–∫–æ–π –∞–≤—Ç–æ–±—É—Å —è —Ç–µ–±—è –ø—Ä–æ–≤–æ–∂–∞–ª–∞ —á–∞—Å—Ç–æ? –í—ã–±–µ—Ä–∏ 2 –≤–∞—Ä–∏–∞–Ω—Ç–∞ –æ—Ç–≤–µ—Ç–∞ –¥–ª—è –æ—Ç–≤–µ—Ç–∞ –Ω–∞ 2 –≤–æ–ø—Ä–æ—Å–∞ –≤ –æ–¥–Ω–æ–º –≤–æ–ø—Ä–æ—Å–µ.",
            options: ["–í–µ—Å–Ω–∞", "–ó–∏–º–∞", "–õ–µ—Ç–æ", "–û—Å–µ–Ω—å", "96", "159", "157", "56"],
            correct: [1, 6]
        },
        {
            id: 5,
            question: "–°–∫–æ–ª—å–∫–æ –ø—Ä–∏–º–µ—Ä–Ω–æ —à–∞–≥–æ–≤ –º—ã –Ω–∞—à–∞–≥–∞–ª–∏ –Ω–∞ –Ω–∞—à–µ–π —Å–∞–º–æ–π –¥–æ–ª–≥–æ–π –ø—Ä–æ–≥—É–ª–∫–µ?",
            options: ["3000", "150000", "25000", "50000"],
            correct: 3
        }
    ]
};

// –°–æ—Å—Ç–æ—è–Ω–∏–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
let currentQuestion = 0;
let selectedAnswer = null; // –¥–ª—è –æ–¥–∏–Ω–æ—á–Ω–æ–≥–æ –≤—ã–±–æ—Ä–∞
let selectedAnswers = [];  // –¥–ª—è –º–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ –≤—ã–±–æ—Ä–∞ (4-–π –≤–æ–ø—Ä–æ—Å)
let answers = [];

// –≠–ª–µ–º–µ–Ω—Ç—ã DOM
const welcomeScreen = document.getElementById('welcome-screen');
const questScreen = document.getElementById('quest-screen');
const finalScreen = document.getElementById('final-screen');
const startQuestBtn = document.getElementById('start-quest');
const questionContainer = document.getElementById('question-container');
const currentQuestionSpan = document.getElementById('current-question');
const answerBtn = document.getElementById('answer-btn');
const nextBtn = document.getElementById('next-btn');

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è
document.addEventListener('DOMContentLoaded', function() {
    startQuestBtn.addEventListener('click', startQuest);
    answerBtn.addEventListener('click', checkAnswer);
    nextBtn.addEventListener('click', nextQuestion);
    
    // –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –≥—Ä–æ–º–∫–æ—Å—Ç—å –∞—É–¥–∏–æ –Ω–∞ 15% —Å—Ä–∞–∑—É –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ
    const audioElement = document.getElementById('birthday-track');
    if (audioElement) {
        audioElement.volume = 0.15;
    }
    // –ó–∞–ø—É—Å–∫ –∞–Ω–∏–º–∞—Ü–∏–∏ –ø–∞–¥–∞—é—â–∏—Ö —Å–µ—Ä–¥–µ—á–µ–∫
    createFallingHearts();
    // –ó–∞—â–∏—Ç–∞ –æ—Ç –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è
    preventCopying();
});

// –ó–∞–ø—É—Å–∫ –∫–≤–µ—Å—Ç–∞
function startQuest() {
    welcomeScreen.classList.remove('active');
    questScreen.classList.add('active');
    showQuestion();
}

// –ü–æ–∫–∞–∑–∞—Ç—å —Ç–µ–∫—É—â–∏–π –≤–æ–ø—Ä–æ—Å
function showQuestion() {
    const question = questData.questions[currentQuestion];
    currentQuestionSpan.textContent = currentQuestion + 1;
    
    questionContainer.innerHTML = `
        <div class="question">${question.question}</div>
        <div class="options">
            ${question.options.map((option, index) => `
                <div class="option" data-index="${index}">
                    ${String.fromCharCode(65 + index)}) ${option}
                </div>
            `).join('')}
        </div>
    `;
    
    // –î–æ–±–∞–≤–∏—Ç—å –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤ –æ—Ç–≤–µ—Ç–æ–≤
    const options = questionContainer.querySelectorAll('.option');
    options.forEach(option => {
        option.addEventListener('click', () => selectOption(option));
    });
    
    // –°–±—Ä–æ—Å–∏—Ç—å —Å–æ—Å—Ç–æ—è–Ω–∏–µ
    if (Array.isArray(question.correct)) {
        selectedAnswers = [];
        answerBtn.disabled = true;
        answerBtn.style.opacity = '0.5';
    } else {
        selectedAnswer = null;
        answerBtn.disabled = true;
        answerBtn.style.opacity = '0.5';
    }
}

// –í—ã–±–æ—Ä –≤–∞—Ä–∏–∞–Ω—Ç–∞ –æ—Ç–≤–µ—Ç–∞
function selectOption(optionElement) {
    const question = questData.questions[currentQuestion];
    const options = questionContainer.querySelectorAll('.option');
    if (Array.isArray(question.correct)) {
        // –ú–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã–π –≤—ã–±–æ—Ä (4-–π –≤–æ–ø—Ä–æ—Å)
        const idx = parseInt(optionElement.dataset.index);
        if (optionElement.classList.contains('selected')) {
            // –°–Ω—è—Ç—å –≤—ã–¥–µ–ª–µ–Ω–∏–µ
            optionElement.classList.remove('selected');
            selectedAnswers = selectedAnswers.filter(i => i !== idx);
        } else {
            if (selectedAnswers.length < question.correct.length) {
                optionElement.classList.add('selected');
                selectedAnswers.push(idx);
            }
        }
        // –ö–Ω–æ–ø–∫–∞ –∞–∫—Ç–∏–≤–Ω–∞ —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –≤—ã–±—Ä–∞–Ω–æ —Ä–æ–≤–Ω–æ —Å—Ç–æ–ª—å–∫–æ, —Å–∫–æ–ª—å–∫–æ –ø—Ä–∞–≤–∏–ª—å–Ω—ã—Ö
        if (selectedAnswers.length === question.correct.length) {
            answerBtn.disabled = false;
            answerBtn.style.opacity = '1';
        } else {
            answerBtn.disabled = true;
            answerBtn.style.opacity = '0.5';
        }
    } else {
        // –û–¥–∏–Ω–æ—á–Ω—ã–π –≤—ã–±–æ—Ä
        options.forEach(opt => {
            opt.classList.remove('selected');
        });
        optionElement.classList.add('selected');
        selectedAnswer = parseInt(optionElement.dataset.index);
        answerBtn.disabled = false;
        answerBtn.style.opacity = '1';
    }
}

// –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –æ—Ç–≤–µ—Ç
function checkAnswer() {
    const question = questData.questions[currentQuestion];
    const options = questionContainer.querySelectorAll('.option');
    if (Array.isArray(question.correct)) {
        // –ú–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã–π –≤—ã–±–æ—Ä
        if (selectedAnswers.length !== question.correct.length) return;
        // –ü–æ–¥—Å–≤–µ—Ç–∏—Ç—å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–µ
        question.correct.forEach(idx => {
            options[idx].classList.add('correct');
        });
        // –ü–æ–¥—Å–≤–µ—Ç–∏—Ç—å –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–µ –≤—ã–±—Ä–∞–Ω–Ω—ã–µ
        selectedAnswers.forEach(idx => {
            if (!question.correct.includes(idx)) {
                options[idx].classList.add('incorrect');
            }
        });
        // –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç–∏ (–±–µ–∑ —É—á—ë—Ç–∞ –ø–æ—Ä—è–¥–∫–∞)
        const isCorrect = selectedAnswers.length === question.correct.length &&
            selectedAnswers.every(idx => question.correct.includes(idx));
        answers.push({
            questionId: question.id,
            selected: [...selectedAnswers],
            correct: isCorrect
        });
    } else {
        // –û–¥–∏–Ω–æ—á–Ω—ã–π –≤—ã–±–æ—Ä
        if (selectedAnswer === null) return;
        options[question.correct].classList.add('correct');
        if (selectedAnswer !== question.correct) {
            options[selectedAnswer].classList.add('incorrect');
        }
        answers.push({
            questionId: question.id,
            selected: selectedAnswer,
            correct: selectedAnswer === question.correct
        });
    }
    // –ü–æ–∫–∞–∑–∞—Ç—å –∫–Ω–æ–ø–∫—É "–î–∞–ª—å—à–µ"
    answerBtn.style.display = 'none';
    nextBtn.style.display = 'inline-block';
    // –û—Ç–∫–ª—é—á–∏—Ç—å –≤—ã–±–æ—Ä –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤
    options.forEach(option => {
        option.style.pointerEvents = 'none';
    });
}

// –°–ª–µ–¥—É—é—â–∏–π –≤–æ–ø—Ä–æ—Å
function nextQuestion() {
    currentQuestion++;
    
    if (currentQuestion < questData.questions.length) {
        // –ü–æ–∫–∞–∑–∞—Ç—å —Å–ª–µ–¥—É—é—â–∏–π –≤–æ–ø—Ä–æ—Å
        answerBtn.style.display = 'inline-block';
        nextBtn.style.display = 'none';
        showQuestion();
    } else {
        // –ü–æ–∫–∞–∑–∞—Ç—å —Ñ–∏–Ω–∞–ª—å–Ω—ã–π —ç–∫—Ä–∞–Ω
        showFinalScreen();
    }
}

// –ü–æ–∫–∞–∑–∞—Ç—å —Ñ–∏–Ω–∞–ª—å–Ω—ã–π —ç–∫—Ä–∞–Ω
function showFinalScreen() {
    questScreen.classList.remove('active');
    finalScreen.classList.add('active');
    
    // –ó–∞–ø—É—Å—Ç–∏—Ç—å –∞–Ω–∏–º–∞—Ü–∏—é –ø–∞–¥–∞—é—â–∏—Ö —Å–µ—Ä–¥–µ—á–µ–∫ –Ω–∞ —Ñ–∏–Ω–∞–ª—å–Ω–æ–º —ç–∫—Ä–∞–Ω–µ
    createFallingHearts();
    
    // –ù–∞—Å—Ç—Ä–æ–∏—Ç—å –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏–µ —Ç—Ä–µ–∫–∞ –ø–æ—Å–ª–µ –ø–æ–∫–∞–∑–∞ —Ñ–∏–Ω–∞–ª—å–Ω–æ–≥–æ —ç–∫—Ä–∞–Ω–∞
    setTimeout(() => {
        setupMusicTrack();
    }, 100);
    
    // –ü–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
    const correctAnswers = answers.filter(answer => answer.correct).length;
    console.log(`–ü—Ä–∞–≤–∏–ª—å–Ω—ã—Ö –æ—Ç–≤–µ—Ç–æ–≤: ${correctAnswers} –∏–∑ ${questData.questions.length}`);
}

// –°–æ–∑–¥–∞–Ω–∏–µ –ø–∞–¥–∞—é—â–∏—Ö —Å–µ—Ä–¥–µ—á–µ–∫
function createFallingHearts() {
    const hearts = ['‚ù§Ô∏è', 'üíñ', 'üíï', 'üíó', 'üíì'];
    
    setInterval(() => {
        const heart = document.createElement('div');
        heart.className = 'heart';
        heart.textContent = hearts[Math.floor(Math.random() * hearts.length)];
        heart.style.left = Math.random() * 100 + 'vw';
        heart.style.animationDuration = (Math.random() * 3 + 3) + 's';
        
        document.body.appendChild(heart);
        
        // –£–¥–∞–ª–∏—Ç—å —Å–µ—Ä–¥–µ—á–∫–æ –ø–æ—Å–ª–µ –∞–Ω–∏–º–∞—Ü–∏–∏
        setTimeout(() => {
            if (heart.parentNode) {
                heart.parentNode.removeChild(heart);
            }
        }, 6000);
    }, 500);
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Ç–∞–π–º–µ—Ä–∞ (–µ—Å–ª–∏ –Ω—É–∂–Ω–æ)
function updateTimer() {
    // –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –ª–æ–≥–∏–∫—É –¥–ª—è —Ä–µ–∞–ª—å–Ω–æ–≥–æ —Ç–∞–π–º–µ—Ä–∞
    // –ù–∞–ø—Ä–∏–º–µ—Ä, –æ—Ç—Å—á–µ—Ç –¥–æ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω–æ–π –¥–∞—Ç—ã
    const targetDate = new Date('2025-07-27'); // –ü—Ä–∏–º–µ—Ä –¥–∞—Ç—ã
    const now = new Date();
    const diffTime = targetDate - now;
    const diffDays = Math.ceil(diffTime / (1000 * 60 * 60 * 24));
    
    const countdownNumber = document.querySelector('.countdown-number');
    if (countdownNumber) {
        countdownNumber.textContent = Math.max(0, diffDays);
    }
}

// –û–±–Ω–æ–≤–ª—è—Ç—å —Ç–∞–π–º–µ—Ä –∫–∞–∂–¥—ã–π –¥–µ–Ω—å
setInterval(updateTimer, 24 * 60 * 60 * 1000);
updateTimer(); // –ü–µ—Ä–≤–æ–Ω–∞—á–∞–ª—å–Ω–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞—â–∏—Ç—ã –æ—Ç –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è
function preventCopying() {
    // –ó–∞–ø—Ä–µ—Ç –∫–æ–Ω—Ç–µ–∫—Å—Ç–Ω–æ–≥–æ –º–µ–Ω—é
    document.addEventListener('contextmenu', function(e) {
        e.preventDefault();
        return false;
    });
    
    // –ó–∞–ø—Ä–µ—Ç –≤—ã–¥–µ–ª–µ–Ω–∏—è —Ç–µ–∫—Å—Ç–∞
    document.addEventListener('selectstart', function(e) {
        e.preventDefault();
        return false;
    });
    
    // –ó–∞–ø—Ä–µ—Ç –ø–µ—Ä–µ—Ç–∞—Å–∫–∏–≤–∞–Ω–∏—è —ç–ª–µ–º–µ–Ω—Ç–æ–≤
    document.addEventListener('dragstart', function(e) {
        e.preventDefault();
        return false;
    });
    
    // –ó–∞–ø—Ä–µ—Ç –∫–ª–∞–≤–∏—à –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è
    document.addEventListener('keydown', function(e) {
        if (e.ctrlKey && (e.key === 'c' || e.key === 'C' || e.key === 'u' || e.key === 'U' || e.key === 's' || e.key === 'S')) {
            e.preventDefault();
            return false;
        }
        
        // –ó–∞–ø—Ä–µ—Ç F12
        if (e.key === 'F12') {
            e.preventDefault();
            return false;
        }
    });
    
    // –ó–∞–ø—Ä–µ—Ç –∏–Ω—Å–ø–µ–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —ç–ª–µ–º–µ–Ω—Ç–æ–≤
    document.addEventListener('keyup', function(e) {
        if (e.key === 'F12') {
            e.preventDefault();
            return false;
        }
    });
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏—è —Ç—Ä–µ–∫–∞
function setupMusicTrack() {
    const musicTrackLink = document.querySelector('.music-track');
    const audioElement = document.getElementById('birthday-track');
    // –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –≥—Ä–æ–º–∫–æ—Å—Ç—å –Ω–∞ 15%
    if (audioElement) {
        audioElement.volume = 0.15;
    }
    // –î–æ–±–∞–≤–∏—Ç—å –∫–æ–Ω—Ç—Ä–æ–ª –≥—Ä–æ–º–∫–æ—Å—Ç–∏
    setupVolumeControl();
    
    console.log('–ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Ç—Ä–µ–∫–∞:', { musicTrackLink, audioElement });
    
    if (!musicTrackLink) {
        console.error('–ö–Ω–æ–ø–∫–∞ –º—É–∑—ã–∫–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞!');
        return;
    }
    
    if (!audioElement) {
        console.error('–ê—É–¥–∏–æ —ç–ª–µ–º–µ–Ω—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω!');
        return;
    }
    
    if (musicTrackLink && audioElement) {
        musicTrackLink.addEventListener('click', function(e) {
            e.preventDefault();
            
            // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∏–≥—Ä–∞–µ—Ç –ª–∏ —É–∂–µ –º—É–∑—ã–∫–∞
            if (audioElement.paused) {
                // –ù–∞—á–∏–Ω–∞–µ–º –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏–µ —Å –Ω–∞—á–∞–ª–∞
                audioElement.currentTime = 0;
                audioElement.play().then(() => {
                    // –ò–∑–º–µ–Ω—è–µ–º —Ç–µ–∫—Å—Ç —Å—Å—ã–ª–∫–∏
                    musicTrackLink.textContent = '‚è∏Ô∏è –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Ç—Ä–µ–∫';
                    musicTrackLink.classList.add('playing');
                }).catch(error => {
                    console.log('–û—à–∏–±–∫–∞ –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏—è:', error);
                    alert('–ù–µ —É–¥–∞–ª–æ—Å—å –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ—Å—Ç–∏ —Ç—Ä–µ–∫. –ü–æ–ø—Ä–æ–±—É–π –µ—â–µ —Ä–∞–∑!');
                });
            } else {
                // –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏–µ
                audioElement.pause();
                musicTrackLink.textContent = 'üéÇ –ü—Ä–æ—Å–ª—É—à–∞—Ç—å —Ç—Ä–µ–∫ "–° –¥–Ω—ë–º —Ä–æ–∂–¥–µ–Ω–∏—è, –ê–ª–∏—Å–∞!"';
                musicTrackLink.classList.remove('playing');
            }
        });
        
        // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ–∫–æ–Ω—á–∞–Ω–∏—è —Ç—Ä–µ–∫–∞
        audioElement.addEventListener('ended', function() {
            musicTrackLink.textContent = 'üéÇ –ü—Ä–æ—Å–ª—É—à–∞—Ç—å —Ç—Ä–µ–∫ "–° –¥–Ω—ë–º —Ä–æ–∂–¥–µ–Ω–∏—è, –ê–ª–∏—Å–∞!"';
            musicTrackLink.classList.remove('playing');
        });

        // –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –≥—Ä–æ–º–∫–æ—Å—Ç—å –Ω–∞ 20%
        // audioElement.volume = 0.2; // This line is now handled by setupVolumeControl
    }
}

// –ì–ª–æ–±–∞–ª—å–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏—è –º—É–∑—ã–∫–∏
function playMusic(event) {
    event.preventDefault();
    
    const musicTrackLink = event.target;
    const audioElement = document.getElementById('birthday-track');
    // –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –≥—Ä–æ–º–∫–æ—Å—Ç—å –Ω–∞ 15%
    if (audioElement) {
        audioElement.volume = 0.15;
    }
    
    console.log('–í–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏–µ –º—É–∑—ã–∫–∏:', { musicTrackLink, audioElement });
    
    if (!audioElement) {
        console.error('–ê—É–¥–∏–æ —ç–ª–µ–º–µ–Ω—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω!');
        alert('–û—à–∏–±–∫–∞: –∞—É–¥–∏–æ —ç–ª–µ–º–µ–Ω—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω');
        return;
    }
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∏–≥—Ä–∞–µ—Ç –ª–∏ —É–∂–µ –º—É–∑—ã–∫–∞
    if (audioElement.paused) {
        // –ù–∞—á–∏–Ω–∞–µ–º –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏–µ —Å –Ω–∞—á–∞–ª–∞
        audioElement.currentTime = 0;
        audioElement.play().then(() => {
            // –ò–∑–º–µ–Ω—è–µ–º —Ç–µ–∫—Å—Ç —Å—Å—ã–ª–∫–∏
            musicTrackLink.textContent = '‚è∏Ô∏è –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Ç—Ä–µ–∫';
            musicTrackLink.classList.add('playing');
            console.log('–ú—É–∑—ã–∫–∞ –Ω–∞—á–∞–ª–∞ –∏–≥—Ä–∞—Ç—å');
        }).catch(error => {
            console.log('–û—à–∏–±–∫–∞ –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏—è:', error);
            alert('–ù–µ —É–¥–∞–ª–æ—Å—å –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ—Å—Ç–∏ —Ç—Ä–µ–∫. –ü–æ–ø—Ä–æ–±—É–π –µ—â–µ —Ä–∞–∑!');
        });
    } else {
        // –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏–µ
        audioElement.pause();
        musicTrackLink.textContent = 'üéÇ –ü—Ä–æ—Å–ª—É—à–∞—Ç—å —Ç—Ä–µ–∫ "–° –¥–Ω—ë–º —Ä–æ–∂–¥–µ–Ω–∏—è, –ê–ª–∏—Å–∞!"';
        musicTrackLink.classList.remove('playing');
        console.log('–ú—É–∑—ã–∫–∞ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞');
    }

    // –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –≥—Ä–æ–º–∫–æ—Å—Ç—å –Ω–∞ 20%
    // if (audioElement) { // This line is now handled by setupVolumeControl
    //     audioElement.volume = 0.2;
    // }
}

// –î–æ–±–∞–≤–∏—Ç—å –∫–æ–Ω—Ç—Ä–æ–ª –≥—Ä–æ–º–∫–æ—Å—Ç–∏ –¥–ª—è –∞—É–¥–∏–æ
function setupVolumeControl() {
    const audioElement = document.getElementById('birthday-track');
    let volumeControl = document.getElementById('volume-control');
    if (!audioElement) return;
    // –ï—Å–ª–∏ —É–∂–µ –µ—Å—Ç—å –∫–æ–Ω—Ç—Ä–æ–ª ‚Äî –Ω–µ –¥–æ–±–∞–≤–ª—è—Ç—å –≤—Ç–æ—Ä–æ–π
    if (volumeControl) return;
    // –ù–∞–π—Ç–∏ —Å–µ–∫—Ü–∏—é —Å –º—É–∑—ã–∫–æ–π
    const musicSection = document.querySelector('.entertainment-section');
    if (!musicSection) return;
    // –°–æ–∑–¥–∞—Ç—å –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –¥–ª—è –ø–æ–ª–∑—É–Ω–∫–∞
    const volumeContainer = document.createElement('div');
    volumeContainer.style.marginTop = '20px';
    volumeContainer.style.display = 'flex';
    volumeContainer.style.alignItems = 'center';
    volumeContainer.style.justifyContent = 'center';
    // –ü–æ–¥–ø–∏—Å—å
    const label = document.createElement('label');
    label.textContent = '–ì—Ä–æ–º–∫–æ—Å—Ç—å:';
    label.style.marginRight = '10px';
    // –ü–æ–ª–∑—É–Ω–æ–∫
    volumeControl = document.createElement('input');
    volumeControl.type = 'range';
    volumeControl.id = 'volume-control';
    volumeControl.min = 0;
    volumeControl.max = 100;
    volumeControl.value = Math.round(audioElement.volume * 100);
    volumeControl.style.width = '120px';
    // –ó–Ω–∞—á–µ–Ω–∏–µ
    const valueSpan = document.createElement('span');
    valueSpan.textContent = volumeControl.value + '%';
    valueSpan.style.marginLeft = '10px';
    // –°–ª—É—à–∞—Ç–µ–ª—å
    volumeControl.addEventListener('input', function() {
        audioElement.volume = volumeControl.value / 100;
        valueSpan.textContent = volumeControl.value + '%';
    });
    // –î–æ–±–∞–≤–∏—Ç—å —ç–ª–µ–º–µ–Ω—Ç—ã
    volumeContainer.appendChild(label);
    volumeContainer.appendChild(volumeControl);
    volumeContainer.appendChild(valueSpan);
    musicSection.appendChild(volumeContainer);
}
